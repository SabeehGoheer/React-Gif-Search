{"ast":null,"code":"import _classCallCheck from \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sabeehgoheer/Development/React Sample Apps/gifs/src/componenets/ImageCard.js\";\nimport React from \"react\";\nimport \"./ImageList.css\";\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageCard, _React$Component);\n\n  function ImageCard(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCard).call(this, props));\n\n    _this.setSpans = function () {\n      debugger;\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 10);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.imageRef.current.addEventListener(\"load\", this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          title = _this$props$image.title,\n          embed_url = _this$props$image.embed_url;\n      return React.createElement(\"div\", {\n        style: {\n          gridRowEnd: \"span \".concat(this.state.spans)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: title,\n        src: embed_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(React.Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/sabeehgoheer/Development/React Sample Apps/gifs/src/componenets/ImageCard.js"],"names":["React","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","image","title","embed_url","gridRowEnd","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAUnBC,QAVmB,GAUR,YAAM;AACf;AACA,UAAMC,MAAM,GAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,EAAnB,CAAd;;AACA,YAAKO,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,KAfkB;;AAEjB,UAAKI,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,UAAKH,QAAL,GAAgBL,KAAK,CAACa,SAAN,EAAhB;AAHiB;AAIlB;;;;wCAEmB,CAClB;AACD;;;6BASQ;AAAA,8BACsB,KAAKX,KAAL,CAAWY,KADjC;AAAA,UACCC,KADD,qBACCA,KADD;AAAA,UACQC,SADR,qBACQA,SADR;AAEP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,iBAAU,KAAKL,KAAL,CAAWJ,KAArB;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKH,QAAf;AAAyB,QAAA,GAAG,EAAEU,KAA9B;AAAqC,QAAA,GAAG,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAzBqBhB,KAAK,CAACkB,S;;AA4B9B,eAAejB,SAAf","sourcesContent":["import React from \"react\";\nimport \"./ImageList.css\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    //this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    debugger;\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10);\n    this.setState({ spans });\n  };\n\n  render() {\n    const { title, embed_url } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={title} src={embed_url} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}